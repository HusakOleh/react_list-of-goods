{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetic","setState","ALPHABET","sortLength","LENGTH","sortReverse","sortReset","this","visibleGoods","goods","sort","el1","el2","length","reverse","console","log","getReorderedGoods","className","type","onClick","map","el","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,WAAa,WACX,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,YAAc,WACR,EAAKT,MAAMC,WACb,EAAKI,SAAS,CACZJ,YAAY,IAGd,EAAKI,SAAS,CACZJ,YAAY,KAzBpB,EA8BES,UAAY,WACV,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAjClB,4CAqCE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EArEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GAiBzB,OAfIX,IAAaL,EAASS,UACxBM,EAAaE,OAGXZ,IAAaL,EAASW,QACxBI,EAAaE,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIE,OAASD,EAAIC,UAG/ChB,GACFW,EAAaM,UAIfC,QAAQC,IAAIlB,EAAUD,GAEfW,EAgDgBS,CAAkBvB,EAAiBa,KAAKX,OAE7D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAASb,KAAKP,eAHhB,iCAQA,wBACEmB,KAAK,SACLD,UAAU,6BACVE,QAASb,KAAKJ,WAHhB,4BAQA,wBACEgB,KAAK,SACLD,UAAU,6BACVE,QAASb,KAAKF,YAHhB,sBAQER,KAAgBC,IAEd,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAASb,KAAKD,UAHhB,sBAUN,6BACE,6BACGE,EAAaa,KAAI,SAAAC,GAAE,OAClB,oBAAI,UAAQ,OAAZ,SAA6BA,GAALA,iBApFtC,GAAyBC,aCtDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ab732d1e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort();\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((el1, el2) => el1.length - el2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetic = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  sortReverse = () => {\n    if (this.state.isReversed) {\n      this.setState({\n        isReversed: false,\n      });\n    } else {\n      this.setState({\n        isReversed: true,\n      });\n    }\n  };\n\n  sortReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={this.sortAlphabetic}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success is-light\"\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={this.sortReverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || !!sortType)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.sortReset}\n              >\n                Reset\n              </button>\n            )}\n\n        </div>\n        <ul>\n          <ul>\n            {visibleGoods.map(el => (\n              <li data-cy=\"Good\" key={el}>{el}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}